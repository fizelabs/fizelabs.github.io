{"version":3,"sources":["components/Form.jsx","App.js","serviceWorker.js","index.js"],"names":["Form","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","rights","name","bit","check","allChecked","handleChange","bind","assertThisInitialized","handleChangeAllChecked","handelRedirectToLink","e","_this2","i","Number","target","getAttribute","arr","map","j","k","push","setState","preventDefault","scope","link","concat","window","location","href","_this3","react_default","a","createElement","className","type","key","index","checked","onChange","onClick","Component","App","components_Form","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e96a58ce.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Form extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\trights:[\r\n\t\t\t\t{name:\"Разрешение на отправку уведомлений\", bit:1, check:false},\r\n\t\t\t\t{name:\"Доступ к друзьям\", bit:2, check:false},\r\n\t\t\t\t{name:\"Доступ к фотографиям\", bit:4, check:false},\r\n\t\t\t\t{name:\"Доступ к аудиозаписям\", bit:8, check:false},\r\n\t\t\t\t{name:\"Доступ к видеозаписям\", bit:16, check:false},\r\n\t\t\t\t{name:\"Доступ к историям\", bit:64, check:false},\r\n\t\t\t\t{name:\"Доступ к wiki-страницам\", bit:128, check:false},\r\n\t\t\t\t{name:\"Добавление ссылки на приложение в меню слева\", bit:256, check:false},\r\n\t\t\t\t{name:\"Доступ к статусу пользователя\", bit:1024, check:false},\r\n\t\t\t\t{name:\"Доступ к заметкам пользователя\", bit:2048, check:false},\r\n\t\t\t\t{name:\"Доступ к методам работы с сообщениями\", bit:4096, check:false},\r\n\t\t\t\t{name:\"Доступ к методам работы со стеной\", bit:8192, check:false},\r\n\t\t\t\t{name:\"Доступ к расширенным методам работы с рекламным API\", bit:32768, check:false},\r\n\t\t\t\t{name:\"Доступ к API в любое время\", bit:65536, check:false},\r\n\t\t\t\t{name:\"Доступ к документам\", bit:131072, check:false},\r\n\t\t\t\t{name:\"Доступ к группам пользователя\", bit:262144, check:false},\r\n\t\t\t\t{name:\"Доступ к оповещениям об ответах пользователю\", bit:524288, check:false},\r\n\t\t\t\t{name:\"Доступ к статистике групп и приложений пользователя\", bit:1048576, check:false},\r\n\t\t\t\t{name:\"Доступ к email пользователя\", bit:4194304, check:false},\r\n\t\t\t\t{name:\"Доступ к товарам\", bit:134217728, check:false}\r\n\t\t\t],\r\n\t\t\tallChecked:false\r\n\t\t}\r\n\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.handleChangeAllChecked = this.handleChangeAllChecked.bind(this);\r\n\t\tthis.handelRedirectToLink = this.handelRedirectToLink.bind(this);\r\n\t}\r\n\r\n\thandleChange(e){\r\n\t\tlet i = Number(e.target.getAttribute('index'));\r\n\t\tlet arr = [];\r\n\t\tlet allChecked = this.state.allChecked;\r\n\t\t\r\n\t\tthis.state.rights.map( (j,k) => {\r\n\r\n\t\t\tif (k === i){\r\n\t\t\t\tj.check = !j.check;\r\n\t\t\t} else {\r\n\t\t\t\tallChecked = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tarr.push(j);\r\n\t\t\tthis.setState({rights:arr, allChecked:allChecked});\r\n\t\t})\r\n\t}\r\n\r\n\thandleChangeAllChecked(e){\r\n\t\tlet arr = [];\r\n\t\tlet check = !this.state.allChecked; \r\n\r\n\t\tthis.state.rights.map( (i,k)=>{\r\n\t\t\ti.check = check;\r\n\t\t\tarr.push(i);\r\n\t\t})\r\n\r\n\t\tthis.setState({rights:arr, allChecked:check});\r\n\t}\r\n\r\n\thandelRedirectToLink(e){\r\n\t\te.preventDefault();\r\n\t\t\r\n\t\tlet scope = 0;\r\n\t\t\r\n\t\tthis.state.rights.map( (i)=>{\r\n\t\t\tif(i.check)\r\n\t\t\t\tscope += i.bit;\r\n\t\t});\r\n\r\n\t\tlet link  = `https://oauth.vk.com/authorize?client_id=6640373&scope=${scope}&redirect_uri=https://api.vk.com/blank.html&display=page&response_type=token&revoke=1`;\r\n\r\n\r\n\t\twindow.location.href = link;\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div className=\"section section__wrap\">\r\n\t\t\t\t<header className=\"section section__header\">\r\n\t\t\t\t\t<p>Vtoken</p>\r\n\t\t\t\t</header>\r\n\t\t\t\t<form className=\"section section__form\">\r\n\t\t\t\t\t<p className=\"row row__description\">\r\n\t\t\t\t\t\tВыберите права, которыми будет обладать ваш токен\r\n\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t<div className=\"wrap wrap__rights\">\r\n\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.state.rights.map((i,k)=>{\r\n\t\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t\t<div className=\"row row__right_item\">\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\t\tbit={i.bit}\r\n\t\t\t\t\t\t\t\t\t\tkey={k}\r\n\t\t\t\t\t\t\t\t\t\tindex={k}\r\n\t\t\t\t\t\t\t\t\t\tchecked={i.check}\r\n\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<p>{i.name}</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t<div className=\"row row__right_item\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\tchecked={this.state.allChecked}\r\n\t\t\t\t\t\t\tonChange={this.handleChangeAllChecked}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<p>Отметить всё</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"row row__btn-getToken\">\r\n\t\t\t\t\t\t<div className=\"wrap wrap__btn\">\r\n\t\t\t\t\t\t\t<a href=\"#\" onClick={this.handelRedirectToLink}>\r\n\t\t\t\t\t\t\t\tПолучить токен\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Form;","import React, { Component } from 'react';\n\nimport Form from './components/Form';\n\nimport './scss/index.scss';\nimport './scss/Form.scss';\n\nclass App extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.state = {};\n\t}\n\n  render(){\n    return(\n      <Form />\n      );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}